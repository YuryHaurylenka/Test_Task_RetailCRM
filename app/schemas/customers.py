from datetime import datetime
from decimal import Decimal
from typing import List

from pydantic import Field

from .base import CamelModel


class ProductItem(CamelModel):
    quantity: int = Field(
        ...,
        ge=1,
        description="Quantity of the product.",
        examples=[2],
    )
    price: Decimal = Field(
        ...,
        ge=0,
        description="Unit price (major currency units).",
        examples=["19.99"],
    )


class OrderCreate(CamelModel):
    customer_id: int = Field(
        ...,
        alias="customerId",
        description="Identifier of an existing customer.",
        examples=[108],
    )
    items: List[ProductItem] = Field(
        ...,
        min_length=1,
        description="List of order line-items.",
        examples=[
            [
                {"quantity": 1, "price": "9.99"},
                {"quantity": 3, "price": "4.50"},
            ]
        ],
    )


class OrderRead(CamelModel):
    id: int = Field(
        ...,
        description="Internal order identifier in RetailCRM.",
        examples=[182],
    )
    order_number: str = Field(
        ...,
        alias="orderNumber",
        description="Human-friendly order number generated by the service.",
        examples=["ORD-20250424165914-E0E4B8"],
    )
    created_at: datetime = Field(
        ...,
        alias="createdAt",
        description="Timestamp when the order was created.",
        examples=["2025-04-24T19:59:14"],
    )
    customer_id: int = Field(
        ...,
        alias="customerId",
        description="Identifier of the customer who placed the order.",
        examples=[108],
    )
    items: List[ProductItem] = Field(
        ...,
        description="Line-items that belong to this order.",
    )
